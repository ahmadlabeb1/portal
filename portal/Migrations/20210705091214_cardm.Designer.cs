// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portal.Data;

namespace portal.Migrations
{
    [DbContext(typeof(PortalContext))]
    [Migration("20210705091214_cardm")]
    partial class cardm
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("portal.Models.CardMultiAdv", b =>
                {
                    b.Property<int>("Id_CardM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_lang")
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageCard")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_CardM");

                    b.HasIndex("Id_lang");

                    b.ToTable("CardMultiAdv");
                });

            modelBuilder.Entity("portal.Models.Language", b =>
                {
                    b.Property<int>("Lang_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lang_key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lang_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Lang_Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("portal.Models.NavigationItem", b =>
                {
                    b.Property<int>("Nav_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Lang_id")
                        .HasColumnType("int");

                    b.Property<string>("Nav_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nav_url")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Nav_id");

                    b.HasIndex("Lang_id");

                    b.ToTable("NavigationItem");
                });

            modelBuilder.Entity("portal.Models.SubNavigationItem", b =>
                {
                    b.Property<int>("subNav_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Lang_id")
                        .HasColumnType("int");

                    b.Property<int>("Nav_id")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("subNav_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subNav_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subNav_id");

                    b.HasIndex("Nav_id");

                    b.ToTable("SubNavigationItem");
                });

            modelBuilder.Entity("portal.Models.slideImage", b =>
                {
                    b.Property<int>("Id_slid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discrbtion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_lang")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_slid");

                    b.HasIndex("id_lang");

                    b.ToTable("slideImage");
                });

            modelBuilder.Entity("portal.Models.CardMultiAdv", b =>
                {
                    b.HasOne("portal.Models.Language", "language")
                        .WithMany("cardMultiAdvs")
                        .HasForeignKey("Id_lang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("language");
                });

            modelBuilder.Entity("portal.Models.NavigationItem", b =>
                {
                    b.HasOne("portal.Models.Language", "language")
                        .WithMany("navigationItems")
                        .HasForeignKey("Lang_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("language");
                });

            modelBuilder.Entity("portal.Models.SubNavigationItem", b =>
                {
                    b.HasOne("portal.Models.NavigationItem", "navigationItem")
                        .WithMany("subnavigationitems")
                        .HasForeignKey("Nav_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("navigationItem");
                });

            modelBuilder.Entity("portal.Models.slideImage", b =>
                {
                    b.HasOne("portal.Models.Language", "languageImage")
                        .WithMany("Slidesimage")
                        .HasForeignKey("id_lang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("languageImage");
                });

            modelBuilder.Entity("portal.Models.Language", b =>
                {
                    b.Navigation("cardMultiAdvs");

                    b.Navigation("navigationItems");

                    b.Navigation("Slidesimage");
                });

            modelBuilder.Entity("portal.Models.NavigationItem", b =>
                {
                    b.Navigation("subnavigationitems");
                });
#pragma warning restore 612, 618
        }
    }
}
